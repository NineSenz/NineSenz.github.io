(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{521:function(v,_,i){"use strict";i.r(_);var l=i(2),e=Object(l.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("p",[v._v("I. 介绍Promise")]),v._v(" "),_("ul",[_("li",[v._v("什么是Promise")]),v._v(" "),_("li",[v._v("Promise的优势")])]),v._v(" "),_("p",[v._v("II. Promise的使用")]),v._v(" "),_("ul",[_("li",[v._v("创建Promise对象")]),v._v(" "),_("li",[v._v("Promise的状态")]),v._v(" "),_("li",[v._v("Promise的状态转换")]),v._v(" "),_("li",[v._v("Promise的then()方法")]),v._v(" "),_("li",[v._v("Promise的catch()方法")]),v._v(" "),_("li",[v._v("Promise的finally()方法")])]),v._v(" "),_("p",[v._v("III. Promise的链式调用")]),v._v(" "),_("ul",[_("li",[v._v("then()方法的链式调用")]),v._v(" "),_("li",[v._v("catch()方法的链式调用")]),v._v(" "),_("li",[v._v("finally()方法的链式调用")])]),v._v(" "),_("p",[v._v("IV. Promise的错误处理")]),v._v(" "),_("ul",[_("li",[v._v("Promise的错误捕获")]),v._v(" "),_("li",[v._v("Promise的错误传递")]),v._v(" "),_("li",[v._v("Promise.all()方法")])]),v._v(" "),_("p",[v._v("V. Promise的应用场景")]),v._v(" "),_("ul",[_("li",[v._v("异步请求")]),v._v(" "),_("li",[v._v("链式操作")]),v._v(" "),_("li",[v._v("多个异步请求的并行处理")])]),v._v(" "),_("p",[v._v("VI. Promise的局限性和解决方案")]),v._v(" "),_("ul",[_("li",[v._v("Promise的局限性")]),v._v(" "),_("li",[v._v("async/await语法")])]),v._v(" "),_("p",[v._v("VII. 总结")])])}),[],!1,null,null,null);_.default=e.exports}}]);